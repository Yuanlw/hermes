#指定端口号
server:
  port: 9001
#DB mysql
userProduct:
  jdbc:
    driver: com.mysql.jdbc.Driver
    url: jdbc:mysql://rm-2ze2km2flsnr6sdd0.mysql.rds.aliyuncs.com:3306/db_bookkeeping?useUnicode=true&zeroDateTimeBehavior=round
    username: bookkeeping_user
    password: QRbUtM4OS7PpfkUQ
    maxActive: 200
    maxWait: 60000
    minIdle: 5
    initial:
      size: 5


  #AppID
appId: wxbda23da6b2f09532
AppSecret: a6541b5c8141ee71d415b2588991d08f

#############
# 输出到控制台
#############

# log4j.rootLogger日志输出类别和级别：只输出不低于该级别的日志信息DEBUG < INFO < WARN < ERROR < FATAL
# WARN：日志级别     CONSOLE：输出位置自己定义的一个名字       logfile：输出位置自己定义的一个名字
log4j:
  rootLogger: WARN,CONSOLE,logfile
  # 配置CONSOLE输出到控制台
  appender:
    CONSOLE: org.apache.log4j.ConsoleAppender
      # 配置CONSOLE设置为自定义布局模式
      layout: org.apache.log4j.PatternLayout
        # 配置CONSOLE日志的输出格式  [frame] 2019-08-22 22:52:12,000  %r耗费毫秒数 %p日志的优先级 %t线程名 %C所属类名通常为全类名 %L代码中的行号 %x线程相关联的NDC %m日志 %n换行
        ConversionPattern: [ frame ] %d{yyyy-MM-dd HH:mm:ss,SSS} - %-4r %-5p [%t] %C:%L %x - %m%n

  ################
  # 输出到日志文件中
  ################

  # 配置logfile输出到文件中 文件大小到达指定尺寸的时候产生新的日志文件
  logfile: org.apache.log4j.RollingFileAppender
    # 保存编码格式
    Encoding: UTF-8
    # 输出文件位置此为项目根目录下的logs文件夹中
    File: logs/info.log
    # 后缀可以是KB,MB,GB达到该大小后创建新的日志文件
    MaxFileSize: 200MB
    # 设置滚定文件的最大值3 指可以产生root.log.1、root.log.2、root.log.3和root.log四个日志文件
    MaxBackupIndex: 5
    # 配置logfile为自定义布局模式
    layout: org.apache.log4j.PatternLayout
    ConversionPattern: %d{yyyy-MM-dd HH:mm:ss} %F %p %m%n

